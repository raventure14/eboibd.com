// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Change this to "mysql" or "sqlite" if using a different DB
  url      = env("DATABASE_URL") // Add this variable in your .env file
  directUrl      = env("DIRECT_URL") // Add this variable in your .env file
}

enum Role {
  ADMIN
  USER
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  role      Role     @default(ADMIN)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

enum PaymentStatus {
  CONFIRMED
  PENDING
  FAILED
  CANCELD
}
enum PaymentMehod {
  bkash
  nagad
}

model Order {
  id            String        @id @default(uuid())
  customerName  String
  customerEmail String
  customerPhone String?
  transactionId String
  amount        Int
  paymentStatus PaymentStatus @default(PENDING)
  orderStatus   PaymentStatus @default(PENDING)
  paymentMethod PaymentMehod

  userAgreement Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  //  Relation with book
  bookId String
  book   Book   @relation(fields: [bookId], references: [id])
}


model Book {
  id String @id @default(uuid())

  name        String
  slug        String
  actualPrice Int
  offerPrice  Int
  image       String
  folderName  String
  fileName    String
  order       Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Clicks {
  id String @id @default(uuid())

  totalClicks Int @default(0)

  day   Int
  month Int
  year  Int

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
